diff --git a/features/cerberusweb.core/api/plugin.classes.php b/features/cerberusweb.core/api/plugin.classes.php
index a4025ba..701cb52 100644
--- a/features/cerberusweb.core/api/plugin.classes.php
+++ b/features/cerberusweb.core/api/plugin.classes.php
@@ -506,6 +506,7 @@ class VaAction_HttpRequest extends Extension_DevblocksEventAction {
 		
 		@$http_verb = $params['http_verb'];
 		@$http_url = $tpl_builder->build($params['http_url'], $dict);
+        @$http_cert = $tpl_builder->build($params['http_cert'], $dict);
 		@$http_headers = DevblocksPlatform::parseCrlfString($tpl_builder->build($params['http_headers'], $dict));
 		@$http_body = $tpl_builder->build($params['http_body'], $dict);
 		@$auth = $params['auth'];
@@ -521,7 +522,13 @@ class VaAction_HttpRequest extends Extension_DevblocksEventAction {
 		
 		if(empty($response_placeholder))
 			return "[ERROR] No result placeholder given.";
-		
+
+        if(!empty($http_cert)) {
+            if(!file_exists($http_cert)) {
+                return "[ERROR] HTTPS client certificate file not found: $http_cert";
+ 			}
+ 		}
+
 		// Output
 		$out = sprintf(">>> Sending HTTP request:\n%s %s\n%s%s\n",
 			mb_convert_case($http_verb, MB_CASE_UPPER),
@@ -555,8 +562,8 @@ class VaAction_HttpRequest extends Extension_DevblocksEventAction {
 		// If set to run in simulator as well
 		if($run_in_simulator) {
 			$this->run($token, $trigger, $params, $dict);
-			
-			$response = $dict->$response_placeholder;
+
+            $response = $this->_execute($http_verb, $http_url, array(), $http_body, $http_headers, $options, $http_cert);
 			
 			if(isset($response['error']) && !empty($response['error'])) {
 				$out .= sprintf(">>> Error in response:\n%s\n", $response['error']);
@@ -589,17 +596,35 @@ class VaAction_HttpRequest extends Extension_DevblocksEventAction {
 			$options['connected_account_id'] = @intval($params['auth_connected_account_id']);
 			$options['trigger'] = $trigger;
 		}
-		
-		$response = $this->_execute($http_verb, $http_url, array(), $http_body, $http_headers, $options);
+
+
+
+        if(!empty($http_cert)) {
+            if(!file_exists($http_cert)) {
+                return "[ERROR] HTTPS client certificate file not found: $http_cert";
+            }
+        }
+
+
+        $response = $this->_execute($http_verb, $http_url, array(), $http_body, $http_headers, $options, $http_cert);
+
+
+
 		$dict->$response_placeholder = $response;
 	}
-	
-	private function _execute($verb='get', $url, $params=array(), $body=null, $headers=array(), $options=array()) {
+
+rivate function _execute($verb='get', $url, $params=array(), $body=null, $headers=array(), $options=array(), $http_cert=null) {
 		if(!empty($params) && is_array($params))
 			$url .= '?' . http_build_query($params);
 		
 		$ch = DevblocksPlatform::curlInit($url);
-		
+
+        if(empty($http_cert)){
+         	curl_setopt($ch, CURLOPT_SSLCERT, null);
+        } else {
+         	curl_setopt($ch, CURLOPT_SSLCERT, $http_cert);
+        }
+
 		if(isset($options['ignore_ssl_validation']) && $options['ignore_ssl_validation']) {
 			curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
 			curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
diff --git a/features/cerberusweb.core/api/uri/cron.php b/features/cerberusweb.core/api/uri/cron.php
index 34e5ede..abf64bc 100644
--- a/features/cerberusweb.core/api/uri/cron.php
+++ b/features/cerberusweb.core/api/uri/cron.php
@@ -55,7 +55,7 @@ class ChCronController extends DevblocksControllerExtension {
 		array_shift($stack); // cron
 		$job_ids = array_shift($stack);
 		
-		@set_time_limit(600); // 10 mins
+		@set_time_limit(3600); // 10 mins
 		
 		CerberusContexts::pushActivityDefaultActor(CerberusContexts::CONTEXT_APPLICATION, 0);
 		
diff --git a/features/cerberusweb.core/templates/internal/decisions/actions/_action_http_request.tpl b/features/cerberusweb.core/templates/internal/decisions/actions/_action_http_request.tpl
index b7eb4fc..9cbdc42 100644
--- a/features/cerberusweb.core/templates/internal/decisions/actions/_action_http_request.tpl
+++ b/features/cerberusweb.core/templates/internal/decisions/actions/_action_http_request.tpl
@@ -11,6 +11,11 @@
 	<input type="text" name="{$namePrefix}[http_url]" value="{$params.http_url|default:""}" class="placeholders" spellcheck="false" size="45" style="width:100%;" placeholder="e.g. http://example.com/api/request.json">
 </div>
 
+<b>HTTPS client certificate file path (Optional):</b>
+<div style="margin-left:10px;margin-bottom:10px;">
+	<input type="text" name="{$namePrefix}[http_cert]" value="{$params.http_cert|default:""}" class="placeholders" spellcheck="false" size="45" style="width:100%;" placeholder="e.g. /path/to/https/cert.pem">
+</div>
+
 <div class="cerb-httprequest-headers">
 	<b>Request headers:</b>
 	<div style="margin-left:10px;margin-bottom:10px;">
diff --git a/libs/devblocks/Devblocks.class.php b/libs/devblocks/Devblocks.class.php
index f922921..a872d99 100644
--- a/libs/devblocks/Devblocks.class.php
+++ b/libs/devblocks/Devblocks.class.php
@@ -261,8 +261,8 @@ class DevblocksPlatform extends DevblocksEngine {
 	
 	static function curlInit($url=null) {
 		$ch = curl_init($url);
-		curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 30);
-		curl_setopt($ch, CURLOPT_TIMEOUT, 30);
+		curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 90);
+		curl_setopt($ch, CURLOPT_TIMEOUT, 90);
 		
 		return $ch;
 	}
diff --git a/libs/devblocks/api/services/event/event_helper.php b/libs/devblocks/api/services/event/event_helper.php
index 3f6d341..46f2a7e 100644
--- a/libs/devblocks/api/services/event/event_helper.php
+++ b/libs/devblocks/api/services/event/event_helper.php
@@ -4656,7 +4656,7 @@ class DevblocksEventHelper {
 		// [TODO] Iterate through pages if over a certain list length?
 		// [TODO] I believe we solved this by just setting ctx:id rows first
 		//$view->renderLimit = (isset($params['limit']) && is_numeric($params['limit'])) ? intval($params['limit']) : 100;
-		$view->renderLimit = 100;
+		$view->renderLimit = 5000;
 		$view->renderPage = 0;
 		$view->renderTotal = false;
 		
